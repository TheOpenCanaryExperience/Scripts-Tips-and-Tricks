#!/bin/bash

# Set the Mastodon API credentials
MASTODON_CLIENT_ID="YOUR_CLIENT_ID"
MASTODON_CLIENT_SECRET="YOUR_CLIENT_SECRET"
MASTODON_ACCESS_TOKEN="YOUR_ACCESS_TOKEN"
MASTODON_INSTANCE_URL="https://your-mastodon-instance.com"

# Set the OpenCanary name
OC_Name="Your_OC_Name"

# Number of hours to check for recent files
hours_to_check=4

# Function to post to Mastodon
post_to_mastodon() {
    local message="$1"
    curl -X POST -H "Authorization: Bearer $MASTODON_ACCESS_TOKEN" -d "status=$message" "$MASTODON_INSTANCE_URL/api/v1/statuses"
}

# Directory to check
malware_dir="$HOME/malware"

# Get current time and calculate the timestamp for specified hours ago
current_time=$(date +"%s")
hours_ago=$(date -d "$hours_to_check hours ago" +"%s")

# Find files in the past specified hours
recent_files=$(find "$malware_dir" -type f -newermt "$(date -d "$hours_to_check hours ago" +'%Y-%m-%d %H:%M:%S')")

# Create a summary message
summary_message="[$OC_Name]\nFile drops in the past $hours_to_check hours:"

if [ -n "$recent_files" ]; then
    while IFS= read -r file; do
        filename=$(basename "$file" | cut -d'-' -f1)
        extension=$(basename "$file" | rev | cut -d'.' -f1 | rev)
        hash_value=$(sha256sum "$file" | awk '{print $1}')
        hash_link="Hash: https://www.virustotal.com/gui/file/$hash_value"

        summary_message+="\n$filename.$extension - $hash_link"
    done <<< "$recent_files"
else
    summary_message+="\nNone seen."
fi

# Replace \n with %0A for line breaks
summary_message="${summary_message//\\n/%0A}"

# Call the function to post to Mastodon
post_to_mastodon "$summary_message"
